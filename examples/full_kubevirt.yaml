---
- hosts: localhost
  gather_facts: false
  become: false
  vars_files:
    - vars/config.yaml
  vars_prompt:
    - name: cluster_name
      prompt: Specify cluster name
      private: false
  tasks:
    - name: Destroy Full cluster
      when: action == "delete" or action == "destroy"
      block:
        - name: Delete the service (type LoadBalancer) for Full masters
          kubernetes.core.k8s:
            state: absent
            api_version: v1
            kind: Service
            namespace: "{{ ocp_namespace }}"
            name: "{{ ocp_vmname_master_prefix }}-svc"

        - name: Delete the service (type LoadBalancer) for Full workers
          kubernetes.core.k8s:
            state: absent
            api_version: v1
            kind: Service
            namespace: "{{ ocp_namespace }}"
            name: "{{ ocp_vmname_worker_prefix }}-svc"

        - name: Delete A dns record
          amazon.aws.route53:
            state: absent
            zone: "{{ dns_zone }}"
            record: "{{ item }}.{{ cluster_name}}.{{ cluster_domain }}"
            type: A
          loop:
            - "api"
            - "*.apps"

        - name: Delete a Full VM - masters
          kubevirt.core.kubevirt_vm:
            name: "{{ ocp_vmname_master_prefix }}-{{ _index }}"
            namespace: "{{ ocp_namespace }}"
            state: absent
          loop: "{{ query('sequence', 'start=1 end=3') }}"
          loop_control:
            loop_var: _index

        - name: Delete a Full VM - workers
          kubevirt.core.kubevirt_vm:
            name: "{{ ocp_vmname_worker_prefix }}-{{ _index }}"
            namespace: "{{ ocp_namespace }}"
            state: absent
          loop: "{{ query('sequence', 'start=1 end=3') }}"
          loop_control:
            loop_var: _index

        - name: Remove Assisted Installer Cluster
          agonzalezrh.install_openshift.delete_cluster:
            cluster_id: "{{ cluster_id }}"
            offline_token: "{{ offline_token }}"

    - name: Create Full cluster
      when: action == "create"
      block:
        - name: Add the service (type LoadBalancer) for Full Clusters - masters
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'templates/masters_svc.yaml') }}"
            wait: true
            wait_timeout: 300
          vars:
            svcname: "{{ ocp_vmname_master_prefix }}-svc"
            namespace: "{{ ocp_namespace }}"

        - name: Wait for the LoadBalancer value - masters
          register: full_svc_masters
          kubernetes.core.k8s_info:
            api_version: v1
            kind: Service
            name: "{{ ocp_vmname_master_prefix }}-svc"
            namespace: "{{ ocp_namespace }}"
          until: full_svc_masters.resources[0].status.loadBalancer.ingress[0].ip | default('') != ''
          retries: 10
          delay: 2

        - name: Add A dns record - masters
          amazon.aws.route53:
            state: present
            overwrite: true
            zone: "{{ dns_zone }}"
            record: "{{ item }}.{{ cluster_name}}.{{ cluster_domain }}"
            type: A
            value: "{{ full_svc_masters.resources[0].status.loadBalancer.ingress[0].ip }}"
            ttl: 30
          loop:
            - "api"

        - name: Add the service (type LoadBalancer) for Full Clusters - workers
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'templates/workers_svc.yaml') }}"
            wait: true
            wait_timeout: 300
          vars:
            svcname: "{{ ocp_vmname_worker_prefix }}-svc"
            namespace: "{{ ocp_namespace }}"

        - name: Wait for the LoadBalancer value - workers
          register: full_svc_workers
          kubernetes.core.k8s_info:
            api_version: v1
            kind: Service
            name: "{{ ocp_vmname_worker_prefix }}-svc"
            namespace: "{{ ocp_namespace }}"
          until: full_svc_workers.resources[0].status.loadBalancer.ingress[0].ip | default('') != ''
          retries: 10
          delay: 2

        - name: Add A dns record - masters
          amazon.aws.route53:
            state: present
            overwrite: true
            zone: "{{ dns_zone }}"
            record: "{{ item }}.{{ cluster_name}}.{{ cluster_domain }}"
            type: A
            value: "{{ full_svc_workers.resources[0].status.loadBalancer.ingress[0].ip }}"
            ttl: 30
          loop:
            - "*.apps"

        - name: Create OVN secondary network
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'templates/net-attach-def.yaml') }}"
            wait: true
            wait_timeout: 300
          vars:
            network_name: "{{ cluster_name }}-openshift"
            namespace: "{{ ocp_namespace }}"

        - name: Create Assisted Installer Cluster
          agonzalezrh.install_openshift.create_cluster:
            name: "{{ cluster_name }}"
            openshift_version: "{{ cluster_version }}"
            base_dns_domain: "{{ cluster_domain }}"
            offline_token: "{{ offline_token }}"
            pull_secret: "{{ pull_secret }}"
            high_availability_mode: "Full"
            schedulable_masters: false
            service_networks:
              - cidr: "172.31.0.0/16"
            machine_networks:
              - cidr: "10.10.10.0/24"
            api_vip: 10.10.10.100
            api_vips:
              - ip: 10.10.10.100
            ingress_vip: 10.10.10.101
            ingress_vips:
              - ip: 10.10.10.101
          register: newcluster

        - name: Include vars
          include_vars:
            file: vars/static_network_config_full.yaml

        - name: Create Infrastructure environment
          agonzalezrh.install_openshift.create_infra_env:
            name: "{{ cluster_name }}-infra-env"
            image_type: "{{ cluster_iso_type }}"
            cluster_id: "{{ newcluster.result.id }}"
            ssh_authorized_key: "{{ ssh_authorized_key }}"
            offline_token: "{{ offline_token }}"
            pull_secret: "{{ pull_secret }}"
            static_network_config: "{{ static_network_config }}"
          register: newinfraenv

        - name: Create a three master VMs for Full cluster
          include_tasks: tasks/kubevirt/create_masters.yaml
          vars:
            image_url: "{{ newinfraenv.result.download_url }}"
            vmname: "{{ ocp_vmname_master_prefix }}-{{ _index }}"
            namespace: "{{ ocp_namespace }}"
            storageclass: "{{ storage_class }}"
            network: "{{ cluster_name}}-openshift"
            network_name: "{{ cluster_name }}-openshift"
            pod_network: "192.168.{{ _index }}.0/24"
          loop: "{{ query('sequence', 'start=1 end=3') }}"
          loop_control:
            loop_var: _index

        - name: Create a three worker VMs for Full cluster
          include_tasks: tasks/kubevirt/create_workers.yaml
          vars:
            image_url: "{{ newinfraenv.result.download_url }}"
            vmname: "{{ ocp_vmname_worker_prefix }}-{{ _index }}"
            namespace: "{{ ocp_namespace }}"
            storageclass: "{{ storage_class }}"
            network: "{{ cluster_name}}-openshift"
            network_name: "{{ cluster_name }}-openshift"
            pod_network: "192.168.1{{ _index }}.0/24"
          loop: "{{ query('sequence', 'start=1 end=3') }}"
          loop_control:
            loop_var: _index

        - name: Wait for the hosts to be ready
          agonzalezrh.install_openshift.wait_for_hosts:
            cluster_id: "{{ newcluster.result.id }}"
            offline_token: "{{ offline_token }}"
            expected_hosts: 6
            infra_env_id: "{{ newinfraenv.result.id }}"
            configure_hosts:
              - hostname: master-{{ cluster_name }}-1
                role: master
              - hostname: master-{{ cluster_name }}-2
                role: master
              - hostname: master-{{ cluster_name }}-3
                role: master
              - hostname: worker-{{ cluster_name }}-1
                role: worker
              - hostname: worker-{{ cluster_name }}-2
                role: worker
              - hostname: worker-{{ cluster_name }}-3
                role: worker
            wait_timeout: 600

        - name: Start cluster installation
          agonzalezrh.install_openshift.install_cluster:
            cluster_id: "{{ newcluster.result.id }}"
            offline_token: "{{ offline_token }}"
            wait_timeout: 1200

        - name: Obtain OpenShift cluster credentials
          register: credentials
          agonzalezrh.install_openshift.get_credentials:
            cluster_id: "{{ newcluster.result.id }}"
            offline_token: "{{ offline_token }}"

        - name: Display credentials
          debug:
            var: credentials.result

        - name: Create directory for downloaded credential files
          ansible.builtin.file:
            state: directory
            path: "{{ output_dir }}/{{ cluster_name }}"
            recurse: true

        - name: Downloads OpenShift cluster credentials
          agonzalezrh.install_openshift.download_credentials:
            cluster_id: "{{ newcluster.result.id }}"
            offline_token: "{{ offline_token }}"
            file_name: "{{ item }}"
            dest: "{{ output_dir }}/{{ cluster_name }}/{{ item }}"
          loop:
            - kubeadmin-password
            - kubeconfig
            - kubeconfig-noingress

        - name: Downloads OpenShift cluster files
          agonzalezrh.install_openshift.download_files:
            cluster_id: "{{ newcluster.result.id }}"
            offline_token: "{{ offline_token }}"
            file_name: "{{ item }}"
            dest: "{{ output_dir }}/{{ cluster_name }}/{{ item }}"
          loop:
            - bootstrap.ign
            - master.ign
            - metadata.json
            - worker.ign
            - install-config.yaml
            - custom_manifests.json
            - custom_manifests.yaml
