---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  annotations:
  name: {{ vmname }}
  namespace: {{ namespace }}
  labels:
    app: {{ vmname }}
    vm.kubevirt.io/template: rhel8-server-small
    vm.kubevirt.io/template.namespace: openshift
    vm.kubevirt.io/template.revision: '1'
    vm.kubevirt.io/template.version: v0.24.2
spec:
  dataVolumeTemplates:
    - metadata:
        creationTimestamp: null
        name: "{{ vmname }}-installation-cdrom"
      spec:
        source:
          http:
            url: {{ image_url }}
        storage:
          resources:
            requests:
              storage: 3Gi
    - metadata:
        name: {{ vmname }}
        namespace: {{ namespace }}
      spec:
        preallocation: false
        source:
          blank: {}
        storage:
          resources:
            requests:
              storage: 100Gi
          storageClassName: "{{ storageclass }}"

  running: true
  template:
    metadata:
      annotations:
        vm.kubevirt.io/flavor: small
        vm.kubevirt.io/os: rhel8
        vm.kubevirt.io/workload: server
      creationTimestamp: null
      labels:
        kubevirt.io/domain: {{ vmname }}
        kubevirt.io/size: small
        role: control-plane
    spec:
      domain:
        cpu:
          cores: 8
          sockets: 1
          threads: 1
        devices:
          disks:
            - bootOrder: 1
              disk:
                bus: virtio
              name: rootdisk
            - bootOrder: 2
              cdrom:
                bus: sata
              name: installation-cdrom
          interfaces:
            - masquerade: {}
              model: virtio
              name: default
            - name: "{{ network_name }}"
              macAddress: "{{ masters_macs[_index|int] }}"
              bridge: {}
          networkInterfaceMultiqueue: true
          rng: {}
        machine:
          type: pc-q35-rhel8.6.0
        resources:
          requests:
            memory: 16Gi
      evictionStrategy: LiveMigrate
      networks:
        - name: default
          pod:
            vmNetworkCIDR: "{{ pod_network }}"
        - name: "{{ network_name }}"
          multus:
            networkName: "{{ network_name }}"

      terminationGracePeriodSeconds: 180
      volumes:
        - dataVolume:
            name: {{ vmname }}
          name: rootdisk
        - dataVolume:
            name: "{{ vmname }}-installation-cdrom"
          name: installation-cdrom
